namespace Veterinaria
{ 
    public partial class Mascotas : Form
    {
        AccesoDato adm = new AccesoDato(@"Provider=Microsoft.Jet.OLEDB.4.0;Data Source=C:\Users\Usuario\Desktop\ARCH_PRUEBA\VETERINARIA_TPPII\Veterinaria.mdb");
        const int tam = 100;
        Mascota[] masc = new Mascota[tam];
        int c;
        bool nuevo;

        public Mascotas()
        {
            InitializeComponent();
       
            for (int i = 0; i < tam; i++)
            {
                masc[i] = null;
            }
            nuevo = false;
        }

        private void Mascotas_Load(object sender, EventArgs e)
        {
            cargarCombo(cboTipoMascota,"TipoMascota");
            cargarLista("Mascota");
            habilitar(false);
        }
        private bool Validar()
        {
            if (txtCodigo.Text == "")
                MessageBox.Show(" Debe ingresar el codigo de la mascota..");
            txtCodigo.Focus();
            return true;
        }
        private bool existe(int Pk)
        {
            for (int i = 0; i < c; i++)
            {
                if (masc[i].pIdMascota == Pk)
                    return true;
            }
            return false;
        }
        private void habilitar(bool opcion)
        {

            txtCodigo.Enabled = opcion;
            txtDueño.Enabled = opcion;
            txtNombre.Enabled = opcion;
            cboTipoMascota.Enabled = opcion; 
            txtRaza.Enabled = opcion;
            dtpFechaNac.Enabled = opcion;
            rbtHembra.Enabled = opcion;
            rbtMacho.Enabled = opcion;
            txtObservacion.Enabled = opcion;
            chkEstado.Enabled = opcion;
            btnCancelar.Enabled = opcion;
            btnGrabar.Enabled = opcion;
            
            lstMascotas.Enabled = opcion;
            
            btnEditar.Enabled = !opcion; 

            btnNuevo.Enabled = !opcion;
            btnSalir.Enabled = !opcion;
            lstMascotas.Enabled = !opcion;

        }
        private void limpiar()
        {

            txtCodigo.Clear();
            txtNombre.Text="";
            txtDueño.Text="";
            cboTipoMascota.SelectedIndex = -1;
            txtRaza.Text ="";
            dtpFechaNac.Value = DateTime.Today;
            rbtHembra.Checked = false;
            rbtMacho.Checked = false;
            chkEstado.Checked = false;
            txtObservacion.Clear();

        }
        public void cargarCombo(ComboBox combo, string nombreTabla)
        {
            DataTable dtm = new DataTable();
            dtm = adm.ConsultarTabla(nombreTabla);
            combo.DataSource = dtm;
            combo.ValueMember = dtm.Columns[0].ColumnName;
            combo.DisplayMember = dtm.Columns[1].ColumnName;
            combo.DropDownStyle = ComboBoxStyle.DropDownList;
            combo.SelectedIndex = -1;
        }
        
        private void cargarLista(string nombreTabla)
        {
            c = 0;
            lstMascotas.Items.Clear();
            adm.LeerTabla(nombreTabla);
            while (adm.PLector.Read())
            {
                Mascota m = new Mascota();
                if (!adm.PLector.IsDBNull(0))
                    m.pIdMascota = adm.PLector.GetInt32(0);
                if (!adm.PLector.IsDBNull(1))
                    m.pNombre = adm.PLector.GetString(1);
                if (!adm.PLector.IsDBNull(2))
                    m.pDueño = adm.PLector.GetString(2);
                if (!adm.PLector.IsDBNull(3))
                    m.pTipoMascota = adm.PLector.GetInt32(3);
                if (!adm.PLector.IsDBNull(4))
                    m.pRaza = adm.PLector.GetString(4);
                if (!adm.PLector.IsDBNull(5))
                    m.pFechaNac = adm.PLector.GetDateTime(5);
                if (!adm.PLector.IsDBNull(6))
                    m.pSexo = adm.PLector.GetBoolean(6);
                if (!adm.PLector.IsDBNull(7))
                    m.pObservacion = adm.PLector.GetString(7);
                if (!adm.PLector.IsDBNull(6))
                    m.pEstado = adm.PLector.GetBoolean(6);
               
                masc[c] = m;
                c++;
            }
            adm.PLector.Close();
            adm.Desconectar();

            for (int i = 0; i < c; i++)
            {
                lstMascotas.Items.Add(masc[i].ToString());
            }            
            lstMascotas.SelectedIndex = 0;
        }
        private void actualizarCampos(int posicion)
        {
            txtCodigo.Text = masc[posicion].pIdMascota.ToString();
            txtNombre.Text = masc[posicion].pNombre;
            txtRaza.Text = masc[posicion].pRaza;
            cboTipoMascota.SelectedValue = masc[posicion].pTipoMascota;
            dtpFechaNac.Value = masc[posicion].pFechaNac;
            if (masc[posicion].pSexo)
                rbtMacho.Checked = true;
            else
                rbtHembra.Checked = true;
            txtDueño.Text = masc[posicion].pDueño;
            txtObservacion.Text = masc[posicion].pObservacion;
            if (masc[posicion].pEstado)
                chkEstado.Checked = true;
            else
                chkEstado.Checked = false;
        }

        private void btnNuevo_Click(object sender, EventArgs e)
        {
            nuevo = true;
            habilitar(true);
            limpiar();
            txtCodigo.Focus();
        }
        private void dataGridViewMascotas_CellContentClick(object sender, DataGridViewCellEventArgs e)
        {
        }

        private void btnCancelar_Click(object sender, EventArgs e)
        {
            limpiar();
            habilitar(false);
            nuevo = false;
        }

        private void btnGrabar_Click(object sender, EventArgs e)
        {
            if (Validar())
            {
                string consultaSQL = "";
                Mascota m = new Mascota();
                m.pIdMascota = Convert.ToInt32(txtCodigo.Text);
                m.pNombre = txtNombre.Text;
                m.pDueño = txtDueño.Text;
                m.pRaza =txtRaza.Text;
                m.pTipoMascota = Convert.ToInt32(cboTipoMascota.SelectedValue);
                m.pFechaNac = dtpFechaNac.Value;
                if (rbtMacho.Checked)
                    m.pSexo = true;
                else
                    m.pSexo = false;
                m.pObservacion = txtObservacion.Text;
                if (chkEstado.Checked)
                    m.pEstado = true;
                else
                    m.pEstado = false;


                if (nuevo)
                {
                    if (!existe(m.pIdMascota))
                    {
                        consultaSQL = "INSERT INTO Mascota (idMascota,Nombre_Mascota,Dueño,idTipoMascota,Raza,fechaNacimiento,Observacion,Estado)" +
                                                 " VALUES ("
                                                 + m.pIdMascota + ",'"
                                                 + m.pNombre + "','"
                                                 + m.pDueño + "',"
                                                 + m.pTipoMascota + ",'"
                                                 + m.pRaza + "',#"
                                                 + m.pFechaNac + "#,"
                                                 + m.pSexo + ",'"    
                                                 + m.pObservacion + "','"
                                                  + m.pEstado +"')";


                        adm.ActualizarBD(consultaSQL);
                        cargarLista("Mascota");

                    }
                    else
                    {
                        MessageBox.Show(" esta mascota ya esta registrada...");

                    }
                }
                else
                {
                    consultaSQL = "UPDATE Mascota SET Nombre='" + m.pNombre + "',"
                                                  + "Dueño='" + m.pRaza + "',"
                                                  + "idTipoMascota=" + m.pTipoMascota + ","
                                                  + "Raza=" + m.pRaza + ","
                                                  + "fechaNacimiento=#" + m.pFechaNac + "#," 
                                                  + "sexo=" + m.pSexo + ","
                                                  + "Observacion='" + m.pObservacion + "', "
                                                  + "Estado="+ m.pEstado + ""
                                                  + "WHERE idMascota=" + m.pIdMascota;
                    adm.ActualizarBD(consultaSQL); 
                    cargarLista("Mascota");

                }

            }
            habilitar(false);
            nuevo = false;



        }

        private void btnSalir_Click(object sender, EventArgs e)
        {
            this.Close();
        }

        private void btnEditar_Click(object sender, EventArgs e)
        {
            if (lstMascotas.SelectedIndex >= 0)
            {
                habilitar(true);
                txtCodigo.Enabled = false;
                txtCodigo.Focus();
            } else
            {
                MessageBox.Show("Debe seleccionar una mascota");
            }
        }

        private void btnBorrar_Click(object sender, EventArgs e)
        {
            if (MessageBox.Show("Está seguro de eliminar este producto?",
                               "ELIMINANDO",
                               MessageBoxButtons.YesNo,
                               MessageBoxIcon.Warning,
                               MessageBoxDefaultButton.Button2)
                               == DialogResult.Yes)
            {
                string consultaSQL = "DELETE FROM Mascota WHERE idMascota=" +
                                masc[lstMascotas.SelectedIndex].pIdMascota;
                adm.ActualizarBD(consultaSQL);
                cargarLista("Mascota");
            }
        }

        private void lstMascotas_SelectedIndexChanged(object sender, EventArgs e)
        {
            actualizarCampos(lstMascotas.SelectedIndex);
        }
    }
}

-------------------------------------------------------------------------------------------

ESTE 'ULTIMO ES PARA HACER LAS VALIDACIONES CON EL ERROR PROVIDE FIJATE SI TE SIRVE EN ALGO PARA NO ESTAR TIRANDO MUCHOS MESSAGE BOX
______________________________________________________________________________________________________________-
private bool Validar()
        {
            bool ok = true;
            if (txtCodigo.Text == "")
            {
                ok = false;
                errorProvider1.SetError(txtCodigo, " Debe ingresar el codigo de la mascota..");
                txtCodigo.Focus();
            }
            if (txtNombre.Text == "")
            {
                ok = false;
                errorProvider1.SetError(txtNombre, "Ingrese el nombre");
            }

            if (cboRaza.SelectedIndex == -1)
            {
                ok= false;
                errorProvider1.SetError(cboRaza, "Seleccione el tipo de Raza");
            }
            if (cboTipoMascota.SelectedIndex == -1)
            {
                ok = false;
                errorProvider1.SetError(cboTipoMascota, "Seleccione el tipo de mascota");
            }


            if (dtpFechaNac.Value< DateTime.Now)
            {
                ok = false;
                errorProvider1.SetError(dtpFechaNac, "Ingrese la fecha de nacimiento");
            }

            if (txtPeso.Text == "")
            {
                ok = false;
                errorProvider1.SetError(txtPeso, "Ingrese un valor númerico");
            }

            if (txtCodCliente.Text == "")
            {
                ok = false;
                errorProvider1.SetError(txtCodCliente, "Ingrese codigo");
            }
            if (txtObservacion.Text == "")
            {
                ok = false;
                errorProvider1.SetError(txtObservacion, "Ingrese codigo");
            }

            return ok;

        }
        private void BorrarMensajeError() 
        {
            errorProvider1.SetError(txtCodigo, "");
            errorProvider1.SetError(txtCodCliente, "");
            errorProvider1.SetError(txtNombre, "");
            errorProvider1.SetError(cboRaza, "");
            errorProvider1.SetError(cboTipoMascota, "");
            errorProvider1.SetError(dtpFechaNac, "");
            errorProvider1.SetError(rbtHembra, "");
            errorProvider1.SetError(rbtMacho, "");
            errorProvider1.SetError(txtPeso, "");
            errorProvider1.SetError(txtObservacion, "");
